(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     16254,        442]
NotebookOptionsPosition[     14767,        407]
NotebookOutlinePosition[     15205,        426]
CellTagsIndexPosition[     15162,        423]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["MAT: 150 -- Lab 6", "Title",
 CellChangeTimes->{{3.7201355342658453`*^9, 3.72013553931319*^9}, {
  3.720135579845504*^9, 
  3.720135580181223*^9}},ExpressionUUID->"fc2ac175-e217-45c1-bf85-\
4164c16378b6"],

Cell["Solution", "Subtitle",
 CellChangeTimes->{{3.7201355929728193`*^9, 3.720135615382588*^9}, {
  3.720372031193204*^9, 
  3.7203720321987658`*^9}},ExpressionUUID->"1a23514a-4b86-4b77-94d1-\
272ab2214518"],

Cell["\<\
Consider the matrix A = {{1,2,3},{1,-2,1}} and vector b = {1,1}. Note that \
the rows of A are orthogonal and the system Ax=b is consistent. Write the \
solution vector x = p+u, where p  is a unique vector from Row A, and u is a \
vector from Nul A. Show that Ap=b and Au=0. \
\>", "ItemNumbered",
 CellChangeTimes->{
  3.720372080317457*^9, {3.720372453368835*^9, 
   3.72037245336904*^9}},ExpressionUUID->"f59a2dca-4ac5-440d-b985-\
12ccbc20387a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}]}], ";", 
   RowBox[{"b", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Since", " ", "b", " ", "is", " ", "the", " ", "first", " ", "column", 
     " ", "of", " ", "A"}], ",", " ", 
    RowBox[{
     RowBox[{"it", " ", "is", " ", "clear", " ", "that", " ", "x"}], "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], " ", "is", " ", "a", " ", 
      "solutoin"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Projection", " ", "of", " ", "x", " ", "onto", " ", "Row", " ", "A"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Dot", "[", 
         RowBox[{"x", ",", 
          RowBox[{"A", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "/", 
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{"A", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"A", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ")"}], "*", 
      RowBox[{"A", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Dot", "[", 
         RowBox[{"x", ",", 
          RowBox[{"A", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "/", 
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{"A", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"A", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ")"}], "*", 
      RowBox[{"A", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Difference", " ", "vector", " ", "between", " ", "x", " ", "and", " ", 
    "p"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"u", "=", 
    RowBox[{"x", "-", "p"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Print", " ", "results"}], " ", "*)"}]}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Ap = \>\"", ",", " ", 
   RowBox[{"A", ".", "p"}], ",", " ", "\"\< and Au = \>\"", ",", " ", 
   RowBox[{"A", ".", "u"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.720372085243474*^9, 3.720372153663583*^9}, {
  3.7203722672038307`*^9, 
  3.720372430929243*^9}},ExpressionUUID->"2ca72816-9444-4cec-91b7-\
8c315912a56a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Ap = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], "\[InvisibleSpace]", "\<\" and Au = \"\>",
    "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}],
  SequenceForm["Ap = ", {1, 1}, " and Au = ", {0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.720372660290296*^9, 3.72037266077777*^9}, 
   3.720373209282483*^9, {3.720373291589979*^9, 
   3.720373292354*^9}},ExpressionUUID->"fe255183-9b56-42ce-964a-73cfc0b336ba"]
}, Open  ]],

Cell[TextData[{
 "Create the 10x10 Hilbert matrix and store as A. Then, perform \
orthonormalization on the rows of A using \
Method->\[CloseCurlyDoubleQuote]GramSchmidt\[CloseCurlyDoubleQuote], Method->\
\[CloseCurlyDoubleQuote]Reorthogonalization\[CloseCurlyDoubleQuote], and \
Method->\[CloseCurlyDoubleQuote]Householder\[CloseCurlyDoubleQuote] options. \
Note that Reorthogonalization is applying GramSchmidt twice, and Householder \
is in essence what we did when applying rotations. Compare the results of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"|", 
      RowBox[{
       SuperscriptBox["UU", "T"], "-", "I"}], "|"}], "]"}], " "}], 
   TraditionalForm]],ExpressionUUID->"fc527fba-4e65-4e4b-ac40-f3bee8655379"],
 " for each method and place in a table. See Table, TableForm, or \
Orthogonalize documentation for help."
}], "ItemNumbered",
 CellChangeTimes->{
  3.720372080317457*^9, {3.720372476369216*^9, 
   3.7203724886571217`*^9}},ExpressionUUID->"3e48a08d-84e0-412e-ad55-\
fe35e305cf62"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "10"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"N", "[", 
    RowBox[{"HilbertMatrix", "[", "n", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"methods", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<GramSchmidt\>\"", ",", "\"\<Reorthogonalization\>\"", ",", 
     "\"\<Householder\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"TableForm", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"method", ",", 
       RowBox[{
        RowBox[{"gs", "=", 
         RowBox[{"Orthogonalize", "[", 
          RowBox[{"A", ",", 
           RowBox[{"Method", "\[Rule]", "method"}]}], "]"}]}], ";", 
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"gs", ".", 
            RowBox[{"Transpose", "[", "gs", "]"}]}], "-", 
           RowBox[{"IdentityMatrix", "[", "n", "]"}]}], "]"}], "]"}]}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"method", ",", "methods"}], "}"}]}], "]"}], "]"}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.720372570379274*^9, 3.7203726115758038`*^9}, {
   3.720372710561788*^9, 3.720372750555484*^9}, 
   3.7203732575119333`*^9},ExpressionUUID->"3be83817-959a-4d4c-874a-\
1ec7ba13afd5"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"GramSchmidt\"\>", "0.9999126120717645`"},
    {"\<\"Reorthogonalization\"\>", "4.440892098500626`*^-16"},
    {"\<\"Householder\"\>", "5.672545766444159`*^-16"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.720372750934545*^9, 3.720373209384557*^9, {3.7203732675158978`*^9, 
   3.72037329242467*^9}},ExpressionUUID->"bade09b8-74a3-4ac2-9368-\
10a3f8536512"]
}, Open  ]],

Cell["\<\
Write a function called LinReg for computing the slope and line of best fit \
for a collection of data that comes in the form of two lists x and y, where x \
is independent data and y is the dependent data. Once you have written your \
function, test it out on the follow set of points.
x = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} and y = {0.1, 1.1, 2.2, 3.0, 4.5, 5.2, \
6.7, 7.5, 8.1, 9.9}
Be sure to plot your results using the Plot function to convince me and \
yourself that you have a line that well-approximates the trend in the given \
data. \
\>", "ItemNumbered",
 CellChangeTimes->{
  3.720372080317457*^9, {3.720372476369216*^9, 
   3.720372503056182*^9}},ExpressionUUID->"9afce46c-4553-4805-93f1-\
fe6e54c7b7fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"LinReg", " ", "Function"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"LinReg", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", "\n", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"A", ",", "Q", ",", "R"}], "}"}], ",", "\n", 
       RowBox[{
        RowBox[{"A", "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "x", "]"}], ",", "2"}], "}"}]}], "]"}]}], 
        ";", "\n", 
        RowBox[{
         RowBox[{"A", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", "x"}], ";", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Q", ",", "R"}], "}"}], "=", 
         RowBox[{"QRDecomposition", "[", "A", "]"}]}], ";", "\n", 
        RowBox[{"LinearSolve", "[", 
         RowBox[{"R", ",", 
          RowBox[{"Q", ".", "y"}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", "Data", " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", " ", "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", 
       " ", "6", ",", " ", "7", ",", " ", "8", ",", " ", "9", ",", " ", 
       "10"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"y", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "0.1", ",", " ", "1.1", ",", " ", "2.2", ",", " ", "3.0", ",", " ", 
       "4.5", ",", " ", "5.2", ",", " ", "6.7", ",", " ", "7.5", ",", " ", 
       "8.1", ",", " ", "9.9"}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Function", " ", "Call"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"LinReg", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", "Plot", " ", "*)"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"y", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"sol", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", "t"}], "+", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "]"}], 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.720372776383895*^9, 3.720373040754138*^9}, {
  3.720373081227804*^9, 3.720373097131751*^9}, {3.720373163604272*^9, 
  3.720373194208893*^9}},ExpressionUUID->"797b898d-8ca7-43fa-a41d-\
61bf1b4bf04d"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 0.1}, {2., 1.1}, {3., 2.2}, {4., 3.}, {5., 4.5}, {
       6., 5.2}, {7., 6.7}, {8., 7.5}, {9., 8.1}, {10., 
       9.9}}]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVznk41HkABvCxSMtk3eWYmd/M17EGRY+2ta1+70ZbOSpXh7bDlKMcpUzK
VZGJbJo2SUVId2HT2Ni1M22URKoRCltyFMpSzJopu7P2j/d5n+d9nvd5PlzB
dv/QzxgMhu9U/u+CFME0ly1ZCwO7n3u99RuV1bVQPquprXT9Mm55tueoTH1P
mkZRe+kFNyOM584flRXcPsLRpjJprmiic4/VqCzKXRg9wTlFd6zmdzCbR2Qt
nyJyRjlXaL2RIraH8i+ZTmeP3TCnmo5mZV8q9xmWFT8ojH3LaaDnJkRUZygG
ZWXlmZ1Rsztox4GrKzbc6pGF009OvdvZS4/nJu21HWiXxfTb90rKBmlxn7Nc
6XVXpss9aPfy61Ga4ZNq+NWbUjrboJFfvGmMPm/RTmfZP6EFnYEyzaa/6b5U
wbOBypd07N2Dgu12H2nXyBonJ/Vr+sYOZsCsZf/Q5wt354kuD9PFiZFDzqsZ
kB/1W/pixwc6tXDSb/ydBvhB6rzPHytoRks3ahI04d+6os+NraJt48L2BPK1
gcS1u9dIJuk+xclVer9Pg0dAclnaNAa8+rcl/xQ7HQ2J/MXyNg0s7xM7sNm6
qNKwX1tyVhNDtYL990v14O+162TNEm3MNmxjeWycgcc2FqomEx3o0oqQrjF9
KGuZ6Ta107FkOHiCF2SAaYp1rsITunh2Z4tGsKMhEtImNy3ZyERlRt0GSmGI
/KcDt0J09RGmLexubjZCUZXL3F3Pv8DmnYmVzNPGuDRnc+TrOgPMCXdo9gkx
wU2XVUlP8wzxyMhRT+hmCpfkCbY0xQi/laWecdQ0g/ZVaZt3kDESNfgrm/40
gxflSrW6m0C3K2FpjGQmPBf7X+bwTNF/kZtTmDQLx71zF+tPmCLnS3Ot6iBz
BJ7JiFNO/cSnw+pDKAtENRVViSpnIjhnfTPzjQXmXw9Z0JYxC0rPC6pCqSXi
Wh+v4MaYo7d/0Z47h6yg0x2618DTAufcXSwfhrAww/WK6ycHS5SmCw3DndgI
32qkfVjLCoeCNntrKtiI97U26XhmhXldxVcOPeRAldAnsZGxkGd/pvShN4VH
mQ+2meayse/2kTzvagrmPRsqGPs48LUMuvDAmovD4775bS4UvoupX2eYyUVF
hHowJZ9CoZXAuknBRY5GBsPGgAvr2ku5y9fxwMsq4bKSuBA73eHLpTzoRhn3
KPq5CBvTetLAJ7gaGxzZtIYHwY0PVOZRgvFwV/V4LQ9RqQGTXscIhtbYJ7bc
5UEYIGlnHid4sYw9caOehwyFMFucS3DfYfpITCMPZW6qTycLCM6OdL4YkPOg
+kPddvEawffxadKuVzyI5cwjdfUEeSJ5cp2ah9Ml0RGiBoIf4+tV5zQISuKa
PZY2EqRG1AgPaBL8Yib+2NhMEOV1MXqhDkFXsHFESysB9BPWV+kT2PWae/T0
Egyc4LpfZxE4SxLY5/unfCKz6sMcgm/SO1Whbwjk8XrztnIJfOwKfh4cIqhZ
q3C0tSHYGUmx378nELMarIocCZK+PaCqGCMQ6UvzUmYTpM/oeRqnmNrVFSbr
nafc5SVZSiVB2Kt8poUrwbn9WuG/fiT4QX4sQzmP4Jpf6KKkSYKVtSKt9vkE
Et491sJ/CTwlifsr3QikY7YqtXrKdWHH5PEFBP8BUD8o/w==
        "]]},
      Annotation[#, "Charting`Private`Tag$3064#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {0, 9.9}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.720373194690222*^9, 3.720373209477442*^9}, {
  3.720373292150034*^9, 
  3.720373292514778*^9}},ExpressionUUID->"3d5bda03-2aed-46d5-a7dd-\
03fd8ebb52b5"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{715, 675},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 210, 4, 98, "Title",ExpressionUUID->"fc2ac175-e217-45c1-bf85-4164c16378b6"],
Cell[793, 28, 207, 4, 53, "Subtitle",ExpressionUUID->"1a23514a-4b86-4b77-94d1-272ab2214518"],
Cell[1003, 34, 458, 9, 74, "ItemNumbered",ExpressionUUID->"f59a2dca-4ac5-440d-b985-12ccbc20387a"],
Cell[CellGroupData[{
Cell[1486, 47, 2744, 85, 205, "Code",ExpressionUUID->"2ca72816-9444-4cec-91b7-8c315912a56a"],
Cell[4233, 134, 537, 12, 24, "Print",ExpressionUUID->"fe255183-9b56-42ce-964a-73cfc0b336ba"]
}, Open  ]],
Cell[4785, 149, 1038, 22, 138, "ItemNumbered",ExpressionUUID->"3e48a08d-84e0-412e-ad55-fe35e305cf62"],
Cell[CellGroupData[{
Cell[5848, 175, 1292, 37, 129, "Code",ExpressionUUID->"3be83817-959a-4d4c-874a-1ec7ba13afd5"],
Cell[7143, 214, 848, 21, 60, "Print",ExpressionUUID->"bade09b8-74a3-4ac2-9368-10a3f8536512"]
}, Open  ]],
Cell[8006, 238, 726, 14, 137, "ItemNumbered",ExpressionUUID->"9afce46c-4553-4805-93f1-fe6e54c7b7fa"],
Cell[CellGroupData[{
Cell[8757, 256, 2675, 74, 300, "Code",ExpressionUUID->"797b898d-8ca7-43fa-a41d-61bf1b4bf04d"],
Cell[11435, 332, 3304, 71, 238, "Print",ExpressionUUID->"3d5bda03-2aed-46d5-a7dd-03fd8ebb52b5"]
}, Open  ]]
}, Open  ]]
}
]
*)

